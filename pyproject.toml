[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "pyef"
description = "Energy Forecasting Toolkit in Python"
authors = [{name = "Bhav Sardana", email = "sardana.bhav@gmail.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = []
dynamic = ["version"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "numpy==1.24.0",
    "pandas>=1.5.2",
    "scikit-learn>=1.2.0",
    "optioneer>=1.0.3",
    "rich>=12.6.0",
    "patsy>=0.5.3",
    "memo>=0.2.3",
    "importlib-resources>=5.12.0",
]

[project.urls]
Homepage = "https://sardanabhav.github.io/pyef"
Documentation = "https://sardanabhav.github.io/pyef"
Changelog = "https://sardanabhav.github.io/pyef/changelog"
Repository = "https://github.com/sardanabhav/pyef"
Issues = "https://github.com/sardanabhav/pyef/issues"
Discussions = "https://github.com/sardanabhav/pyef/discussions"
Gitter = "https://gitter.im/pyef/community"
Funding = "https://github.com/sponsors/sardanabhav"

[project.scripts]
pyef = "pyef.cli:main"

[project.optional-dependencies]
plot = [
    "plotly>=5.11.0",
    "matplotlib>=3.6.2",
]
[tool.pdm]
version = {source = "scm"}
plugins = [
    "pdm-multirun",
]

[tool.pdm.build]
package-dir = "src"
editable-backend = "editables"

[tool.pdm.dev-dependencies]
duty = ["duty>=0.10"]
ci-quality = ["pyef[duty,docs,quality,typing,security]"]
ci-tests = ["pyef[duty,tests]"]
docs = [
    "black>=23.1",
    "markdown-callouts>=0.2",
    "markdown-exec>=0.5",
    "mkdocs>=1.3",
    "mkdocs-coverage>=0.2",
    "mkdocs-gen-files>=0.3",
    "mkdocs-git-committers-plugin-2>=1.1",
    "mkdocs-literate-nav>=0.4",
    "mkdocs-material>=7.3",
    "mkdocs-minify-plugin>=0.6.4",
    "mkdocstrings[python]>=0.18",
    "toml>=0.10",
]
maintain = [
    "black>=23.1",
    "blacken-docs>=1.13",
    "git-changelog>=1.0",
]
quality = [
    "ruff>=0.0.246",
]
tests = [
    "pytest>=6.2",
    "pytest-cov>=3.0",
    "pytest-randomly>=3.10",
    "pytest-xdist>=2.4",
    "setuptools>=65.6.3",
    "pyinstrument>=4.4.0",
]
typing = [
    "mypy>=0.910",
    "types-markdown>=3.3",
    "types-pyyaml>=6.0",
    "types-toml>=0.10",
    "types-python-dateutil>=2.8.19.5",
    "types-setuptools>=65.6.0.2",
    "editables>=0.3",
]
security = ["safety>=2"]
notebook = [
    "ipykernel>=6.19.4",
    "jupyter>=1.0.0",
    "notebook>=6.5.3",
    "pyzmq>=25.0.0",
]

[tool.black]
line-length = 88
exclude = "tests/fixtures"

[tool.isort]
line_length = 88
not_skip = "__init__.py"
multi_line_output = 3
force_single_line = false
balanced_wrapping = true
default_section = "THIRDPARTY"
known_first_party = "pyef"
include_trailing_comma = true

[tool.ruff]
# Decrease the maximum line length to 79 characters.
line-length = 88
# Support Python 3.10+.
target-version = "py311"
src = ["src", "tests"]

[tool.mypy]
files = ["src", "tests"]
show_error_codes = true
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
disallow_untyped_decorators = false
exclude = "tests/fixtures/"
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["patsy", "optioneer", "memo", "pandas.*", "sklearn.*", "pytest"]
ignore_missing_imports = true
